swagger: "2.0"
info:
    title: Security Example API
    description: This API demonstrates the use of the goa security DSL
    version: ""
host: localhost:80
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /secure:
        get:
            tags:
                - secured_service
            summary: secure secured_service
            description: |-
                This action is secured with the jwt scheme

                **Required security scopes for jwt**:
                  * `api:read`
            operationId: secured_service#secure
            parameters:
                - name: fail
                  in: query
                  description: Whether to force auth failure even with a valid JWT
                  required: false
                  type: boolean
                - name: Authorization
                  in: header
                  description: JWT used for authentication
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "403":
                    description: Forbidden response.
                    schema:
                        type: string
            schemes:
                - http
            security:
                - jwt_header_Authorization: []
        put:
            tags:
                - secured_service
            summary: doubly_secure secured_service
            description: |-
                This action is secured with the jwt scheme and also requires an API key query string.

                **Required security scopes for jwt**:
                  * `api:read`
                  * `api:write`

                **Required security scopes for api_key**:
                  * `api:read`
                  * `api:write`
            operationId: secured_service#doubly_secure
            parameters:
                - name: k
                  in: query
                  description: API key
                  required: true
                  type: string
                - name: Authorization
                  in: header
                  description: JWT used for authentication
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "403":
                    description: Forbidden response.
                    schema:
                        type: string
            schemes:
                - http
            security:
                - api_key_query_k: []
                  jwt_header_Authorization: []
        post:
            tags:
                - secured_service
            summary: also_doubly_secure secured_service
            description: |-
                This action is secured with the jwt scheme and also requires an API key header.

                **Required security scopes for jwt**:
                  * `api:read`
                  * `api:write`

                **Required security scopes for api_key**:
                  * `api:read`
                  * `api:write`

                **Required security scopes for basic**:
                  * `api:read`
                  * `api:write`
            operationId: secured_service#also_doubly_secure
            parameters:
                - name: k
                  in: query
                  description: API key
                  required: false
                  type: string
                - name: oauth
                  in: query
                  required: false
                  type: string
                - name: X-Authorization
                  in: header
                  description: JWT used for authentication
                  required: false
                  type: string
                - name: Authorization
                  in: header
                  description: Basic Auth security using Basic scheme (https://tools.ietf.org/html/rfc7617)
                  required: false
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        type: string
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "403":
                    description: Forbidden response.
                    schema:
                        type: string
            schemes:
                - http
            security:
                - api_key_query_k: []
                  jwt_header_X-Authorization: []
                - basic_header_Authorization: []
                  oauth2_query_oauth:
                    - api:read
                    - api:write
    /signin:
        post:
            tags:
                - secured_service
            summary: signin secured_service
            description: Creates a valid JWT
            operationId: secured_service#signin
            parameters:
                - name: Authorization
                  in: header
                  description: Basic Auth security using Basic scheme (https://tools.ietf.org/html/rfc7617)
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/SecuredServiceSigninResponseBody'
                        required:
                            - jwt
                            - api_key
                            - oauth_token
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
            schemes:
                - http
            security:
                - basic_header_Authorization: []
definitions:
    SecuredServiceSigninResponseBody:
        title: SecuredServiceSigninResponseBody
        type: object
        properties:
            api_key:
                type: string
                description: API Key
                example: abcdef12345
            jwt:
                type: string
                description: JWT token
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            oauth_token:
                type: string
                description: OAuth2 token
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
        example:
            api_key: abcdef12345
            jwt: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            oauth_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
        required:
            - jwt
            - api_key
            - oauth_token
securityDefinitions:
    api_key_query_k:
        type: apiKey
        description: Secures endpoint by requiring an API key.
        name: k
        in: query
    basic_header_Authorization:
        type: basic
        description: |-
            Basic authentication used to authenticate security principal during signin

            **Security Scopes**:
              * `api:read`: Read-only access
    jwt_header_Authorization:
        type: apiKey
        description: |-
            Secures endpoint by requiring a valid JWT token retrieved via the signin endpoint. Supports scopes "api:read" and "api:write".

            **Security Scopes**:
              * `api:read`: Read-only access
              * `api:write`: Read and write access
        name: Authorization
        in: header
    jwt_header_X-Authorization:
        type: apiKey
        description: |-
            Secures endpoint by requiring a valid JWT token retrieved via the signin endpoint. Supports scopes "api:read" and "api:write".

            **Security Scopes**:
              * `api:read`: Read-only access
              * `api:write`: Read and write access
        name: X-Authorization
        in: header
    oauth2_query_oauth:
        type: oauth2
        description: Secures endpoint by requiring a valid OAuth2 token retrieved via the signin endpoint. Supports scopes "api:read" and "api:write".
        flow: accessCode
        authorizationUrl: http://goa.design/authorization
        tokenUrl: http://goa.design/token
        scopes:
            api:read: Read-only access
            api:write: Read and write access
externalDocs:
    description: Security example README
    url: https://github.com/goadesign/goa/tree/master/example/security/README.md
