openapi: 3.0.3
info:
  title: Chatter service describing the streaming features of goa v2.
  version: "1.0"
servers:
- url: http://localhost:80
  description: Default server for chatter
paths:
  /echoer:
    get:
      tags:
      - chatter
      summary: echoer chatter
      description: Echoes the message sent by the client.
      operationId: chatter#echoer
      responses:
        "101":
          description: Switching Protocols response.
          content:
            application/json:
              schema:
                type: string
                example: Excepturi ullam repellendus eius quis quos inventore.
              example: Et exercitationem nulla qui dicta.
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json:
              schema:
                type: string
                example: Amet facere nihil molestias.
        "403":
          description: 'invalid-scopes: Forbidden response.'
          content:
            application/json:
              schema:
                type: string
                example: Perspiciatis tenetur aut natus occaecati suscipit sapiente.
      security:
      - jwt_header_Authorization:
        - stream:read
        - stream:write
  /history:
    get:
      tags:
      - chatter
      summary: history chatter
      description: Returns the chat messages sent to the server.
      operationId: chatter#history
      parameters:
      - name: view
        in: query
        description: View to use to render the result
        allowEmptyValue: true
        schema:
          type: string
          description: View to use to render the result
          example: Reprehenderit autem necessitatibus esse unde adipisci.
        example: Quis modi.
      responses:
        "101":
          description: Switching Protocols response.
          content:
            application/json:
              schema:
                description: 'Response body may alternatively be #/components/schemas/HistoryResponseBodyTiny'
                $ref: '#/components/schemas/ChatSummary'
              example:
                length: 1377377358064110438
                message: Ullam quia neque quis qui quia optio.
                sent_at: "1971-06-24T22:05:58Z"
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json:
              schema:
                type: string
                example: Voluptatem reprehenderit amet sit ex corrupti.
        "403":
          description: 'invalid-scopes: Forbidden response.'
          content:
            application/json:
              schema:
                type: string
                example: Laborum dolorum officiis dignissimos hic est culpa.
      security:
      - jwt_header_Authorization:
        - stream:read
        - stream:write
  /listener:
    get:
      tags:
      - chatter
      summary: listener chatter
      description: Listens to the messages sent by the client.
      operationId: chatter#listener
      responses:
        "101":
          description: Switching Protocols response.
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json:
              schema:
                type: string
                example: Aliquid voluptatem vitae error eveniet dolores sapiente.
        "403":
          description: 'invalid-scopes: Forbidden response.'
          content:
            application/json:
              schema:
                type: string
                example: Amet voluptatem.
      security:
      - jwt_header_Authorization:
        - stream:read
        - stream:write
  /login:
    post:
      tags:
      - chatter
      summary: login chatter
      description: Creates a valid JWT token for auth to chat.
      operationId: chatter#login
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                type: string
                description: New JWT token
                example: Vero necessitatibus ullam sed maiores nobis.
              example: Rerum maiores et aut.
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json:
              schema:
                type: string
                example: Sint sapiente vitae quis perferendis.
      security:
      - basic_header_Authorization: []
  /subscribe:
    get:
      tags:
      - chatter
      summary: subscribe chatter
      description: Subscribe to events sent when new chat messages are added.
      operationId: chatter#subscribe
      responses:
        "101":
          description: Switching Protocols response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
              example:
                action: added
                added_at: "2000-04-23T17:24:02Z"
                message: Vel quidem error explicabo.
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json:
              schema:
                type: string
                example: Quo omnis quasi nihil quasi cumque.
        "403":
          description: 'invalid-scopes: Forbidden response.'
          content:
            application/json:
              schema:
                type: string
                example: Esse non.
      security:
      - jwt_header_Authorization:
        - stream:read
        - stream:write
  /summary:
    get:
      tags:
      - chatter
      summary: summary chatter
      description: Summarizes the chat messages sent by the client.
      operationId: chatter#summary
      responses:
        "101":
          description: Switching Protocols response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatSummaryResponseCollection'
              example:
              - length: 1647485631995539732
                message: Similique tempora nesciunt repellendus ipsum quis.
                sent_at: "1997-01-14T09:46:38Z"
              - length: 1647485631995539732
                message: Similique tempora nesciunt repellendus ipsum quis.
                sent_at: "1997-01-14T09:46:38Z"
        "401":
          description: 'unauthorized: Unauthorized response.'
          content:
            application/json:
              schema:
                type: string
                example: Expedita in velit harum excepturi est iusto.
        "403":
          description: 'invalid-scopes: Forbidden response.'
          content:
            application/json:
              schema:
                type: string
                example: Fugiat consectetur commodi nihil autem.
      security:
      - jwt_header_Authorization:
        - stream:read
        - stream:write
components:
  schemas:
    ChatSummary:
      type: object
      properties:
        length:
          type: integer
          description: Length of the message sent
          example: 3807871536578403479
          format: int64
        message:
          type: string
          description: Message sent to the server
          example: Vero quia ad quibusdam.
        sent_at:
          type: string
          description: Time at which the message was sent
          example: "1997-05-03T17:42:57Z"
          format: date-time
      example:
        length: 2898030982842231240
        message: Possimus qui hic perspiciatis modi quasi.
        sent_at: "1996-12-15T08:33:55Z"
      required:
      - message
      - sent_at
    ChatSummaryResponse:
      type: object
      properties:
        length:
          type: integer
          description: Length of the message sent
          example: 7020248672909453972
          format: int64
        message:
          type: string
          description: Message sent to the server
          example: Eos eos velit dolorum consequuntur culpa adipisci.
        sent_at:
          type: string
          description: Time at which the message was sent
          example: "2001-02-17T17:00:14Z"
          format: date-time
      description: ChatSummaryResponse result type (default view)
      example:
        length: 6710387863326036119
        message: Eos veniam illum illum in molestiae.
        sent_at: "1978-07-13T22:23:03Z"
      required:
      - message
      - sent_at
    ChatSummaryResponseCollection:
      type: array
      items:
        $ref: '#/components/schemas/ChatSummaryResponse'
      description: SummaryResponseBody is the result type for an array of ChatSummaryResponse
        (default view)
      example:
      - length: 1647485631995539732
        message: Similique tempora nesciunt repellendus ipsum quis.
        sent_at: "1997-01-14T09:46:38Z"
      - length: 1647485631995539732
        message: Similique tempora nesciunt repellendus ipsum quis.
        sent_at: "1997-01-14T09:46:38Z"
      - length: 1647485631995539732
        message: Similique tempora nesciunt repellendus ipsum quis.
        sent_at: "1997-01-14T09:46:38Z"
    Event:
      type: object
      properties:
        action:
          type: string
          example: added
          enum:
          - added
        added_at:
          type: string
          description: Time at which the message was added
          example: "1985-05-15T03:10:48Z"
          format: date-time
        message:
          type: string
          description: Message sent to the server
          example: Maxime fugiat repellendus corporis dolorem voluptas sapiente.
      example:
        action: added
        added_at: "1992-10-13T12:22:27Z"
        message: Quo consequuntur labore id porro corrupti.
      required:
      - message
      - action
      - added_at
    HistoryResponseBodyTiny:
      type: object
      properties:
        message:
          type: string
          description: Message sent to the server
          example: Optio in quia et nostrum.
      description: HistoryResponseBody result type (tiny view)
      example:
        message: Eos consequatur nobis quod.
      required:
      - message
  securitySchemes:
    basic_header_Authorization:
      type: http
      description: Secures the login endpoint.
      scheme: basic
    jwt_header_Authorization:
      type: http
      description: Secures endpoint by requiring a valid JWT token. Supports scopes
        "stream:read" and "stream:write".
      scheme: bearer
tags:
- name: chatter
  description: The chatter service implements a simple client and server chat.
