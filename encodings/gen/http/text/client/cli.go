// Code generated by goa v2.0.5, DO NOT EDIT.
//
// text HTTP client CLI support package
//
// Command:
// $ goa gen goa.design/examples/encodings/design -o
// $(GOPATH)/src/goa.design/examples/encodings

package client

import (
	text "goa.design/examples/encodings/gen/text"
)

// BuildConcatstringsPayload builds the payload for the text concatstrings
// endpoint from CLI flags.
func BuildConcatstringsPayload(textConcatstringsA string, textConcatstringsB string) (*text.ConcatstringsPayload, error) {
	var a string
	{
		a = textConcatstringsA
	}
	var b string
	{
		b = textConcatstringsB
	}
	payload := &text.ConcatstringsPayload{
		A: a,
		B: b,
	}
	return payload, nil
}

// BuildConcatbytesPayload builds the payload for the text concatbytes endpoint
// from CLI flags.
func BuildConcatbytesPayload(textConcatbytesA string, textConcatbytesB string) (*text.ConcatbytesPayload, error) {
	var a string
	{
		a = textConcatbytesA
	}
	var b string
	{
		b = textConcatbytesB
	}
	payload := &text.ConcatbytesPayload{
		A: a,
		B: b,
	}
	return payload, nil
}

// BuildConcatstringfieldPayload builds the payload for the text
// concatstringfield endpoint from CLI flags.
func BuildConcatstringfieldPayload(textConcatstringfieldA string, textConcatstringfieldB string) (*text.ConcatstringfieldPayload, error) {
	var a string
	{
		a = textConcatstringfieldA
	}
	var b string
	{
		b = textConcatstringfieldB
	}
	payload := &text.ConcatstringfieldPayload{
		A: a,
		B: b,
	}
	return payload, nil
}

// BuildConcatbytesfieldPayload builds the payload for the text
// concatbytesfield endpoint from CLI flags.
func BuildConcatbytesfieldPayload(textConcatbytesfieldA string, textConcatbytesfieldB string) (*text.ConcatbytesfieldPayload, error) {
	var a string
	{
		a = textConcatbytesfieldA
	}
	var b string
	{
		b = textConcatbytesfieldB
	}
	payload := &text.ConcatbytesfieldPayload{
		A: a,
		B: b,
	}
	return payload, nil
}
