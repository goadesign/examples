// Code generated by goa v3.20.1, DO NOT EDIT.
//
// monitor client
//
// Command:
// $ goa gen goa.design/examples/sse/design

package monitor

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "monitor" service client.
type Client struct {
	MonitorEndpoint goa.Endpoint
}

// NewClient initializes a "monitor" service client given the endpoints.
func NewClient(monitor goa.Endpoint) *Client {
	return &Client{
		MonitorEndpoint: monitor,
	}
}

// Monitor calls the "monitor" endpoint of the "monitor" service.
func (c *Client) Monitor(ctx context.Context) (res MonitorClientStream, err error) {
	var ires any
	ires, err = c.MonitorEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(MonitorClientStream), nil
}
