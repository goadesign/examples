// Code generated by goa v3.20.1, DO NOT EDIT.
//
// monitor HTTP server types
//
// Command:
// $ goa gen goa.design/examples/sse/design

package server

import (
	monitor "goa.design/examples/sse/gen/monitor"
)

// MonitorResponseBody is the type of the "monitor" service "monitor" endpoint
// HTTP response body.
type MonitorResponseBody struct {
	// Timestamp of the usage report
	Timestamp string `form:"timestamp" json:"timestamp" xml:"timestamp"`
	// CPU usage percentage
	CPU int `form:"cpu" json:"cpu" xml:"cpu"`
	// Memory usage percentage
	Memory int `form:"memory" json:"memory" xml:"memory"`
}

// NewMonitorResponseBody builds the HTTP response body from the result of the
// "monitor" endpoint of the "monitor" service.
func NewMonitorResponseBody(res *monitor.Usage) *MonitorResponseBody {
	body := &MonitorResponseBody{
		Timestamp: res.Timestamp,
		CPU:       res.CPU,
		Memory:    res.Memory,
	}
	return body
}
