// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storage.proto

package storagepb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRequest) Reset()         { *m = ListRequest{} }
func (m *ListRequest) String() string { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()    {}
func (*ListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{0}
}

func (m *ListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRequest.Unmarshal(m, b)
}
func (m *ListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRequest.Marshal(b, m, deterministic)
}
func (m *ListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRequest.Merge(m, src)
}
func (m *ListRequest) XXX_Size() int {
	return xxx_messageInfo_ListRequest.Size(m)
}
func (m *ListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRequest proto.InternalMessageInfo

type StoredBottleCollection struct {
	Field                []*StoredBottle `protobuf:"bytes,1,rep,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StoredBottleCollection) Reset()         { *m = StoredBottleCollection{} }
func (m *StoredBottleCollection) String() string { return proto.CompactTextString(m) }
func (*StoredBottleCollection) ProtoMessage()    {}
func (*StoredBottleCollection) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{1}
}

func (m *StoredBottleCollection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoredBottleCollection.Unmarshal(m, b)
}
func (m *StoredBottleCollection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoredBottleCollection.Marshal(b, m, deterministic)
}
func (m *StoredBottleCollection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoredBottleCollection.Merge(m, src)
}
func (m *StoredBottleCollection) XXX_Size() int {
	return xxx_messageInfo_StoredBottleCollection.Size(m)
}
func (m *StoredBottleCollection) XXX_DiscardUnknown() {
	xxx_messageInfo_StoredBottleCollection.DiscardUnknown(m)
}

var xxx_messageInfo_StoredBottleCollection proto.InternalMessageInfo

func (m *StoredBottleCollection) GetField() []*StoredBottle {
	if m != nil {
		return m.Field
	}
	return nil
}

// A StoredBottle describes a bottle retrieved by the storage service.
type StoredBottle struct {
	// ID is the unique id of the bottle.
	Id string `protobuf:"bytes,8,opt,name=id,proto3" json:"id,omitempty"`
	// Name of bottle
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Winery that produces wine
	Winery *Winery `protobuf:"bytes,2,opt,name=winery,proto3" json:"winery,omitempty"`
	// Vintage of bottle
	Vintage uint32 `protobuf:"varint,3,opt,name=vintage,proto3" json:"vintage,omitempty"`
	// Composition is the list of grape varietals and associated percentage.
	Composition []*Component `protobuf:"bytes,4,rep,name=composition,proto3" json:"composition,omitempty"`
	// Description of bottle
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Rating of bottle from 1 (worst) to 5 (best)
	Rating               uint32   `protobuf:"varint,6,opt,name=rating,proto3" json:"rating,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StoredBottle) Reset()         { *m = StoredBottle{} }
func (m *StoredBottle) String() string { return proto.CompactTextString(m) }
func (*StoredBottle) ProtoMessage()    {}
func (*StoredBottle) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{2}
}

func (m *StoredBottle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StoredBottle.Unmarshal(m, b)
}
func (m *StoredBottle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StoredBottle.Marshal(b, m, deterministic)
}
func (m *StoredBottle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StoredBottle.Merge(m, src)
}
func (m *StoredBottle) XXX_Size() int {
	return xxx_messageInfo_StoredBottle.Size(m)
}
func (m *StoredBottle) XXX_DiscardUnknown() {
	xxx_messageInfo_StoredBottle.DiscardUnknown(m)
}

var xxx_messageInfo_StoredBottle proto.InternalMessageInfo

func (m *StoredBottle) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *StoredBottle) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *StoredBottle) GetWinery() *Winery {
	if m != nil {
		return m.Winery
	}
	return nil
}

func (m *StoredBottle) GetVintage() uint32 {
	if m != nil {
		return m.Vintage
	}
	return 0
}

func (m *StoredBottle) GetComposition() []*Component {
	if m != nil {
		return m.Composition
	}
	return nil
}

func (m *StoredBottle) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *StoredBottle) GetRating() uint32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

type Winery struct {
	// Name of winery
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Region of winery
	Region string `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty"`
	// Country of winery
	Country string `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	// Winery website URL
	Url                  string   `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Winery) Reset()         { *m = Winery{} }
func (m *Winery) String() string { return proto.CompactTextString(m) }
func (*Winery) ProtoMessage()    {}
func (*Winery) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{3}
}

func (m *Winery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Winery.Unmarshal(m, b)
}
func (m *Winery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Winery.Marshal(b, m, deterministic)
}
func (m *Winery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Winery.Merge(m, src)
}
func (m *Winery) XXX_Size() int {
	return xxx_messageInfo_Winery.Size(m)
}
func (m *Winery) XXX_DiscardUnknown() {
	xxx_messageInfo_Winery.DiscardUnknown(m)
}

var xxx_messageInfo_Winery proto.InternalMessageInfo

func (m *Winery) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Winery) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *Winery) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Winery) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type Component struct {
	// Grape varietal
	Varietal string `protobuf:"bytes,1,opt,name=varietal,proto3" json:"varietal,omitempty"`
	// Percentage of varietal in wine
	Percentage           uint32   `protobuf:"varint,2,opt,name=percentage,proto3" json:"percentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Component) Reset()         { *m = Component{} }
func (m *Component) String() string { return proto.CompactTextString(m) }
func (*Component) ProtoMessage()    {}
func (*Component) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{4}
}

func (m *Component) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Component.Unmarshal(m, b)
}
func (m *Component) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Component.Marshal(b, m, deterministic)
}
func (m *Component) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Component.Merge(m, src)
}
func (m *Component) XXX_Size() int {
	return xxx_messageInfo_Component.Size(m)
}
func (m *Component) XXX_DiscardUnknown() {
	xxx_messageInfo_Component.DiscardUnknown(m)
}

var xxx_messageInfo_Component proto.InternalMessageInfo

func (m *Component) GetVarietal() string {
	if m != nil {
		return m.Varietal
	}
	return ""
}

func (m *Component) GetPercentage() uint32 {
	if m != nil {
		return m.Percentage
	}
	return 0
}

type ShowRequest struct {
	// ID of bottle to show
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowRequest) Reset()         { *m = ShowRequest{} }
func (m *ShowRequest) String() string { return proto.CompactTextString(m) }
func (*ShowRequest) ProtoMessage()    {}
func (*ShowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{5}
}

func (m *ShowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowRequest.Unmarshal(m, b)
}
func (m *ShowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowRequest.Marshal(b, m, deterministic)
}
func (m *ShowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowRequest.Merge(m, src)
}
func (m *ShowRequest) XXX_Size() int {
	return xxx_messageInfo_ShowRequest.Size(m)
}
func (m *ShowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ShowRequest proto.InternalMessageInfo

func (m *ShowRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ShowResponse struct {
	// ID is the unique id of the bottle.
	Id string `protobuf:"bytes,8,opt,name=id,proto3" json:"id,omitempty"`
	// Name of bottle
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Winery that produces wine
	Winery *Winery `protobuf:"bytes,2,opt,name=winery,proto3" json:"winery,omitempty"`
	// Vintage of bottle
	Vintage uint32 `protobuf:"varint,3,opt,name=vintage,proto3" json:"vintage,omitempty"`
	// Composition is the list of grape varietals and associated percentage.
	Composition []*Component `protobuf:"bytes,4,rep,name=composition,proto3" json:"composition,omitempty"`
	// Description of bottle
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Rating of bottle from 1 (worst) to 5 (best)
	Rating               uint32   `protobuf:"varint,6,opt,name=rating,proto3" json:"rating,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ShowResponse) Reset()         { *m = ShowResponse{} }
func (m *ShowResponse) String() string { return proto.CompactTextString(m) }
func (*ShowResponse) ProtoMessage()    {}
func (*ShowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{6}
}

func (m *ShowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShowResponse.Unmarshal(m, b)
}
func (m *ShowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShowResponse.Marshal(b, m, deterministic)
}
func (m *ShowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShowResponse.Merge(m, src)
}
func (m *ShowResponse) XXX_Size() int {
	return xxx_messageInfo_ShowResponse.Size(m)
}
func (m *ShowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ShowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ShowResponse proto.InternalMessageInfo

func (m *ShowResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ShowResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShowResponse) GetWinery() *Winery {
	if m != nil {
		return m.Winery
	}
	return nil
}

func (m *ShowResponse) GetVintage() uint32 {
	if m != nil {
		return m.Vintage
	}
	return 0
}

func (m *ShowResponse) GetComposition() []*Component {
	if m != nil {
		return m.Composition
	}
	return nil
}

func (m *ShowResponse) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ShowResponse) GetRating() uint32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

type AddRequest struct {
	// Name of bottle
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Winery that produces wine
	Winery *Winery `protobuf:"bytes,2,opt,name=winery,proto3" json:"winery,omitempty"`
	// Vintage of bottle
	Vintage uint32 `protobuf:"varint,3,opt,name=vintage,proto3" json:"vintage,omitempty"`
	// Composition is the list of grape varietals and associated percentage.
	Composition []*Component `protobuf:"bytes,4,rep,name=composition,proto3" json:"composition,omitempty"`
	// Description of bottle
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Rating of bottle from 1 (worst) to 5 (best)
	Rating               uint32   `protobuf:"varint,6,opt,name=rating,proto3" json:"rating,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRequest) Reset()         { *m = AddRequest{} }
func (m *AddRequest) String() string { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()    {}
func (*AddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{7}
}

func (m *AddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRequest.Unmarshal(m, b)
}
func (m *AddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRequest.Marshal(b, m, deterministic)
}
func (m *AddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRequest.Merge(m, src)
}
func (m *AddRequest) XXX_Size() int {
	return xxx_messageInfo_AddRequest.Size(m)
}
func (m *AddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRequest proto.InternalMessageInfo

func (m *AddRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddRequest) GetWinery() *Winery {
	if m != nil {
		return m.Winery
	}
	return nil
}

func (m *AddRequest) GetVintage() uint32 {
	if m != nil {
		return m.Vintage
	}
	return 0
}

func (m *AddRequest) GetComposition() []*Component {
	if m != nil {
		return m.Composition
	}
	return nil
}

func (m *AddRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *AddRequest) GetRating() uint32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

type AddResponse struct {
	Field                string   `protobuf:"bytes,1,opt,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddResponse) Reset()         { *m = AddResponse{} }
func (m *AddResponse) String() string { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()    {}
func (*AddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{8}
}

func (m *AddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddResponse.Unmarshal(m, b)
}
func (m *AddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddResponse.Marshal(b, m, deterministic)
}
func (m *AddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddResponse.Merge(m, src)
}
func (m *AddResponse) XXX_Size() int {
	return xxx_messageInfo_AddResponse.Size(m)
}
func (m *AddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AddResponse proto.InternalMessageInfo

func (m *AddResponse) GetField() string {
	if m != nil {
		return m.Field
	}
	return ""
}

type RemoveRequest struct {
	// ID of bottle to remove
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveRequest) Reset()         { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()    {}
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{9}
}

func (m *RemoveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveRequest.Unmarshal(m, b)
}
func (m *RemoveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveRequest.Marshal(b, m, deterministic)
}
func (m *RemoveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveRequest.Merge(m, src)
}
func (m *RemoveRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveRequest.Size(m)
}
func (m *RemoveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveRequest proto.InternalMessageInfo

func (m *RemoveRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RemoveResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RemoveResponse) Reset()         { *m = RemoveResponse{} }
func (m *RemoveResponse) String() string { return proto.CompactTextString(m) }
func (*RemoveResponse) ProtoMessage()    {}
func (*RemoveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{10}
}

func (m *RemoveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveResponse.Unmarshal(m, b)
}
func (m *RemoveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveResponse.Marshal(b, m, deterministic)
}
func (m *RemoveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveResponse.Merge(m, src)
}
func (m *RemoveResponse) XXX_Size() int {
	return xxx_messageInfo_RemoveResponse.Size(m)
}
func (m *RemoveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveResponse proto.InternalMessageInfo

type RateRequest struct {
	Field                map[uint32]*ArrayOfString `protobuf:"bytes,1,rep,name=field,proto3" json:"field,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *RateRequest) Reset()         { *m = RateRequest{} }
func (m *RateRequest) String() string { return proto.CompactTextString(m) }
func (*RateRequest) ProtoMessage()    {}
func (*RateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{11}
}

func (m *RateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RateRequest.Unmarshal(m, b)
}
func (m *RateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RateRequest.Marshal(b, m, deterministic)
}
func (m *RateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RateRequest.Merge(m, src)
}
func (m *RateRequest) XXX_Size() int {
	return xxx_messageInfo_RateRequest.Size(m)
}
func (m *RateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RateRequest proto.InternalMessageInfo

func (m *RateRequest) GetField() map[uint32]*ArrayOfString {
	if m != nil {
		return m.Field
	}
	return nil
}

type ArrayOfString struct {
	Field                []string `protobuf:"bytes,1,rep,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ArrayOfString) Reset()         { *m = ArrayOfString{} }
func (m *ArrayOfString) String() string { return proto.CompactTextString(m) }
func (*ArrayOfString) ProtoMessage()    {}
func (*ArrayOfString) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{12}
}

func (m *ArrayOfString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArrayOfString.Unmarshal(m, b)
}
func (m *ArrayOfString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArrayOfString.Marshal(b, m, deterministic)
}
func (m *ArrayOfString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArrayOfString.Merge(m, src)
}
func (m *ArrayOfString) XXX_Size() int {
	return xxx_messageInfo_ArrayOfString.Size(m)
}
func (m *ArrayOfString) XXX_DiscardUnknown() {
	xxx_messageInfo_ArrayOfString.DiscardUnknown(m)
}

var xxx_messageInfo_ArrayOfString proto.InternalMessageInfo

func (m *ArrayOfString) GetField() []string {
	if m != nil {
		return m.Field
	}
	return nil
}

type RateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RateResponse) Reset()         { *m = RateResponse{} }
func (m *RateResponse) String() string { return proto.CompactTextString(m) }
func (*RateResponse) ProtoMessage()    {}
func (*RateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{13}
}

func (m *RateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RateResponse.Unmarshal(m, b)
}
func (m *RateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RateResponse.Marshal(b, m, deterministic)
}
func (m *RateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RateResponse.Merge(m, src)
}
func (m *RateResponse) XXX_Size() int {
	return xxx_messageInfo_RateResponse.Size(m)
}
func (m *RateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RateResponse proto.InternalMessageInfo

type MultiAddRequest struct {
	Field                []*Bottle `protobuf:"bytes,1,rep,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MultiAddRequest) Reset()         { *m = MultiAddRequest{} }
func (m *MultiAddRequest) String() string { return proto.CompactTextString(m) }
func (*MultiAddRequest) ProtoMessage()    {}
func (*MultiAddRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{14}
}

func (m *MultiAddRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiAddRequest.Unmarshal(m, b)
}
func (m *MultiAddRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiAddRequest.Marshal(b, m, deterministic)
}
func (m *MultiAddRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiAddRequest.Merge(m, src)
}
func (m *MultiAddRequest) XXX_Size() int {
	return xxx_messageInfo_MultiAddRequest.Size(m)
}
func (m *MultiAddRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiAddRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MultiAddRequest proto.InternalMessageInfo

func (m *MultiAddRequest) GetField() []*Bottle {
	if m != nil {
		return m.Field
	}
	return nil
}

// Bottle describes a bottle of wine to be stored.
type Bottle struct {
	// Name of bottle
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Winery that produces wine
	Winery *Winery `protobuf:"bytes,2,opt,name=winery,proto3" json:"winery,omitempty"`
	// Vintage of bottle
	Vintage uint32 `protobuf:"varint,3,opt,name=vintage,proto3" json:"vintage,omitempty"`
	// Composition is the list of grape varietals and associated percentage.
	Composition []*Component `protobuf:"bytes,4,rep,name=composition,proto3" json:"composition,omitempty"`
	// Description of bottle
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// Rating of bottle from 1 (worst) to 5 (best)
	Rating               uint32   `protobuf:"varint,6,opt,name=rating,proto3" json:"rating,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bottle) Reset()         { *m = Bottle{} }
func (m *Bottle) String() string { return proto.CompactTextString(m) }
func (*Bottle) ProtoMessage()    {}
func (*Bottle) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{15}
}

func (m *Bottle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bottle.Unmarshal(m, b)
}
func (m *Bottle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bottle.Marshal(b, m, deterministic)
}
func (m *Bottle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bottle.Merge(m, src)
}
func (m *Bottle) XXX_Size() int {
	return xxx_messageInfo_Bottle.Size(m)
}
func (m *Bottle) XXX_DiscardUnknown() {
	xxx_messageInfo_Bottle.DiscardUnknown(m)
}

var xxx_messageInfo_Bottle proto.InternalMessageInfo

func (m *Bottle) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Bottle) GetWinery() *Winery {
	if m != nil {
		return m.Winery
	}
	return nil
}

func (m *Bottle) GetVintage() uint32 {
	if m != nil {
		return m.Vintage
	}
	return 0
}

func (m *Bottle) GetComposition() []*Component {
	if m != nil {
		return m.Composition
	}
	return nil
}

func (m *Bottle) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Bottle) GetRating() uint32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

type MultiAddResponse struct {
	Field                []string `protobuf:"bytes,1,rep,name=field,proto3" json:"field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiAddResponse) Reset()         { *m = MultiAddResponse{} }
func (m *MultiAddResponse) String() string { return proto.CompactTextString(m) }
func (*MultiAddResponse) ProtoMessage()    {}
func (*MultiAddResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{16}
}

func (m *MultiAddResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiAddResponse.Unmarshal(m, b)
}
func (m *MultiAddResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiAddResponse.Marshal(b, m, deterministic)
}
func (m *MultiAddResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiAddResponse.Merge(m, src)
}
func (m *MultiAddResponse) XXX_Size() int {
	return xxx_messageInfo_MultiAddResponse.Size(m)
}
func (m *MultiAddResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiAddResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MultiAddResponse proto.InternalMessageInfo

func (m *MultiAddResponse) GetField() []string {
	if m != nil {
		return m.Field
	}
	return nil
}

type MultiUpdateRequest struct {
	// IDs of the bottles to be updated
	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	// Array of bottle info that matches the ids attribute
	Bottles              []*Bottle `protobuf:"bytes,2,rep,name=bottles,proto3" json:"bottles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *MultiUpdateRequest) Reset()         { *m = MultiUpdateRequest{} }
func (m *MultiUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*MultiUpdateRequest) ProtoMessage()    {}
func (*MultiUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{17}
}

func (m *MultiUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiUpdateRequest.Unmarshal(m, b)
}
func (m *MultiUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiUpdateRequest.Marshal(b, m, deterministic)
}
func (m *MultiUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiUpdateRequest.Merge(m, src)
}
func (m *MultiUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_MultiUpdateRequest.Size(m)
}
func (m *MultiUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MultiUpdateRequest proto.InternalMessageInfo

func (m *MultiUpdateRequest) GetIds() []string {
	if m != nil {
		return m.Ids
	}
	return nil
}

func (m *MultiUpdateRequest) GetBottles() []*Bottle {
	if m != nil {
		return m.Bottles
	}
	return nil
}

type MultiUpdateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MultiUpdateResponse) Reset()         { *m = MultiUpdateResponse{} }
func (m *MultiUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*MultiUpdateResponse) ProtoMessage()    {}
func (*MultiUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_0d2c4ccf1453ffdb, []int{18}
}

func (m *MultiUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MultiUpdateResponse.Unmarshal(m, b)
}
func (m *MultiUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MultiUpdateResponse.Marshal(b, m, deterministic)
}
func (m *MultiUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MultiUpdateResponse.Merge(m, src)
}
func (m *MultiUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_MultiUpdateResponse.Size(m)
}
func (m *MultiUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MultiUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MultiUpdateResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ListRequest)(nil), "storage.ListRequest")
	proto.RegisterType((*StoredBottleCollection)(nil), "storage.StoredBottleCollection")
	proto.RegisterType((*StoredBottle)(nil), "storage.StoredBottle")
	proto.RegisterType((*Winery)(nil), "storage.Winery")
	proto.RegisterType((*Component)(nil), "storage.Component")
	proto.RegisterType((*ShowRequest)(nil), "storage.ShowRequest")
	proto.RegisterType((*ShowResponse)(nil), "storage.ShowResponse")
	proto.RegisterType((*AddRequest)(nil), "storage.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "storage.AddResponse")
	proto.RegisterType((*RemoveRequest)(nil), "storage.RemoveRequest")
	proto.RegisterType((*RemoveResponse)(nil), "storage.RemoveResponse")
	proto.RegisterType((*RateRequest)(nil), "storage.RateRequest")
	proto.RegisterMapType((map[uint32]*ArrayOfString)(nil), "storage.RateRequest.FieldEntry")
	proto.RegisterType((*ArrayOfString)(nil), "storage.ArrayOfString")
	proto.RegisterType((*RateResponse)(nil), "storage.RateResponse")
	proto.RegisterType((*MultiAddRequest)(nil), "storage.MultiAddRequest")
	proto.RegisterType((*Bottle)(nil), "storage.Bottle")
	proto.RegisterType((*MultiAddResponse)(nil), "storage.MultiAddResponse")
	proto.RegisterType((*MultiUpdateRequest)(nil), "storage.MultiUpdateRequest")
	proto.RegisterType((*MultiUpdateResponse)(nil), "storage.MultiUpdateResponse")
}

func init() { proto.RegisterFile("storage.proto", fileDescriptor_0d2c4ccf1453ffdb) }

var fileDescriptor_0d2c4ccf1453ffdb = []byte{
	// 685 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x56, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0x56, 0x7e, 0x96, 0xae, 0x27, 0xcb, 0x56, 0x79, 0x3f, 0x84, 0xf0, 0xb3, 0x2a, 0x68, 0xa2,
	0x08, 0x34, 0xa1, 0x0d, 0xa4, 0x81, 0x84, 0xd0, 0x36, 0x0d, 0xb8, 0x00, 0x01, 0xa9, 0x10, 0x12,
	0x57, 0x64, 0x8d, 0x57, 0x2c, 0xd2, 0x38, 0x38, 0x6e, 0xa7, 0xbe, 0x08, 0x0f, 0xc1, 0xcb, 0x70,
	0xc1, 0x33, 0xf0, 0x1e, 0xc8, 0x8e, 0x93, 0x38, 0x5b, 0x79, 0x81, 0xde, 0xe5, 0xfc, 0x7f, 0xe7,
	0x9c, 0xcf, 0x76, 0xc0, 0x2b, 0x38, 0x65, 0xf1, 0x18, 0xef, 0xe7, 0x8c, 0x72, 0x8a, 0x3a, 0x4a,
	0x0c, 0x3d, 0x70, 0xdf, 0x92, 0x82, 0x47, 0xf8, 0xc7, 0x14, 0x17, 0x3c, 0x3c, 0x83, 0x9d, 0x21,
	0xa7, 0x0c, 0x27, 0x27, 0x94, 0xf3, 0x14, 0x9f, 0xd2, 0x34, 0xc5, 0x23, 0x4e, 0x68, 0x86, 0x1e,
	0xc2, 0xca, 0x05, 0xc1, 0x69, 0xe2, 0x1b, 0x7d, 0x6b, 0xe0, 0x1e, 0x6c, 0xef, 0x57, 0x09, 0x75,
	0xff, 0xa8, 0xf4, 0x09, 0xff, 0x1a, 0xb0, 0xa6, 0xeb, 0xd1, 0x3a, 0x98, 0x24, 0xf1, 0x57, 0xfb,
	0xc6, 0xa0, 0x1b, 0x99, 0x24, 0x41, 0x08, 0xec, 0x2c, 0x9e, 0x60, 0xdf, 0x90, 0x1a, 0xf9, 0x8d,
	0xee, 0x83, 0x73, 0x49, 0x32, 0xcc, 0xe6, 0xbe, 0xd9, 0x37, 0x06, 0xee, 0xc1, 0x46, 0x5d, 0xe2,
	0xb3, 0x54, 0x47, 0xca, 0x8c, 0x7c, 0xe8, 0xcc, 0x48, 0xc6, 0xe3, 0x31, 0xf6, 0xad, 0xbe, 0x31,
	0xf0, 0xa2, 0x4a, 0x44, 0x4f, 0xc0, 0x1d, 0xd1, 0x49, 0x4e, 0x0b, 0x22, 0x30, 0xfb, 0xb6, 0x84,
	0x8a, 0xea, 0x3c, 0xa7, 0xc2, 0x96, 0xe1, 0x8c, 0x47, 0xba, 0x1b, 0xea, 0x83, 0x9b, 0xe0, 0x62,
	0xc4, 0x48, 0x2e, 0xa3, 0x56, 0x24, 0x26, 0x5d, 0x85, 0x76, 0xc0, 0x61, 0x31, 0x27, 0xd9, 0xd8,
	0x77, 0x64, 0x41, 0x25, 0x85, 0x5f, 0xc1, 0x29, 0xb1, 0x2d, 0x6c, 0x48, 0x44, 0xe1, 0xb1, 0x48,
	0x69, 0x4a, 0xad, 0x92, 0x04, 0xfe, 0x11, 0x9d, 0x66, 0x9c, 0xcd, 0x25, 0xfe, 0x6e, 0x54, 0x89,
	0xa8, 0x07, 0xd6, 0x94, 0xa5, 0xbe, 0x2d, 0xb5, 0xe2, 0x33, 0x7c, 0x0d, 0xdd, 0x1a, 0x35, 0x0a,
	0x60, 0x75, 0x16, 0x33, 0x82, 0x79, 0x9c, 0xaa, 0x42, 0xb5, 0x8c, 0xee, 0x02, 0xe4, 0x98, 0x8d,
	0x70, 0x39, 0x17, 0x53, 0xc2, 0xd4, 0x34, 0xe1, 0x1d, 0x70, 0x87, 0xdf, 0xe8, 0xa5, 0x5a, 0xb4,
	0x5a, 0x88, 0x51, 0x2d, 0xa4, 0xdc, 0x98, 0xb4, 0x17, 0x39, 0xcd, 0x8a, 0xa5, 0xdd, 0xd8, 0x1f,
	0x03, 0xe0, 0x38, 0x49, 0xaa, 0x31, 0x2c, 0x49, 0x57, 0xf7, 0xc0, 0x95, 0x4d, 0xa9, 0xdd, 0x6d,
	0x35, 0x67, 0x55, 0xa4, 0x50, 0x87, 0x72, 0x17, 0xbc, 0x08, 0x4f, 0xe8, 0x0c, 0xff, 0x8f, 0x03,
	0x3d, 0x58, 0xaf, 0x1c, 0xca, 0x44, 0xe1, 0x4f, 0x03, 0xdc, 0x28, 0xe6, 0x75, 0xc4, 0xd3, 0xf6,
	0x25, 0xb0, 0x5b, 0x77, 0xa4, 0x39, 0xed, 0xbf, 0x12, 0x1e, 0x67, 0x82, 0xcf, 0xaa, 0x72, 0xf0,
	0x01, 0xa0, 0x51, 0x0a, 0x92, 0x7f, 0xc7, 0x73, 0x59, 0xd7, 0x8b, 0xc4, 0x27, 0x7a, 0x04, 0x2b,
	0xb3, 0x38, 0x9d, 0x62, 0x35, 0xf0, 0x9d, 0x3a, 0xed, 0x31, 0x63, 0xf1, 0xfc, 0xfd, 0xc5, 0x90,
	0x33, 0x92, 0x8d, 0xa3, 0xd2, 0xe9, 0xb9, 0x79, 0x64, 0x84, 0x7b, 0xe0, 0xb5, 0x6c, 0x7a, 0xcb,
	0x56, 0xd3, 0xf2, 0x3a, 0xac, 0x95, 0xc8, 0x54, 0x3f, 0x47, 0xb0, 0xf1, 0x6e, 0x9a, 0x72, 0xa2,
	0x31, 0x60, 0xaf, 0xdd, 0x52, 0xb3, 0xec, 0xf6, 0x8d, 0xf6, 0xdb, 0x00, 0x47, 0xdd, 0x65, 0x4b,
	0xc2, 0x99, 0x01, 0xf4, 0x9a, 0x59, 0x5c, 0x27, 0x8e, 0x36, 0xc5, 0x8f, 0x80, 0xa4, 0xe7, 0xa7,
	0x3c, 0xd1, 0xb8, 0xd0, 0x03, 0x8b, 0x24, 0x85, 0xf2, 0x14, 0x9f, 0xe8, 0x01, 0x74, 0xce, 0xe5,
	0x88, 0x0a, 0xdf, 0x5c, 0x3c, 0xcc, 0xca, 0x1e, 0x6e, 0xc3, 0x66, 0x2b, 0x65, 0x59, 0xff, 0xe0,
	0x97, 0x05, 0x9d, 0x61, 0x19, 0x82, 0x5e, 0x80, 0x2d, 0x5e, 0x26, 0xb4, 0x55, 0x27, 0xd1, 0x1e,
	0xaa, 0x60, 0x77, 0xe1, 0xfb, 0xa3, 0xbd, 0x57, 0x87, 0x60, 0x8b, 0xfb, 0x4c, 0x0b, 0xd7, 0xae,
	0xbf, 0x60, 0xfb, 0x8a, 0x56, 0xf5, 0xff, 0x18, 0xac, 0xe3, 0x24, 0x41, 0x9b, 0x0d, 0x01, 0x6b,
	0xa2, 0x04, 0x5b, 0x6d, 0xa5, 0x8a, 0x78, 0x06, 0x4e, 0x79, 0x66, 0x50, 0xc3, 0xda, 0xd6, 0x29,
	0x0b, 0x6e, 0x5c, 0xd3, 0xab, 0xd0, 0x43, 0xb0, 0x05, 0x39, 0x35, 0x84, 0xda, 0x29, 0xd2, 0x10,
	0xea, 0x0c, 0x46, 0x2f, 0x61, 0xb5, 0xda, 0x1a, 0xf2, 0x6b, 0x97, 0x2b, 0xa4, 0x0e, 0x6e, 0x2e,
	0xb0, 0xa8, 0x04, 0x6f, 0xc0, 0xd5, 0x26, 0x8f, 0x6e, 0xb5, 0x3d, 0x5b, 0x2b, 0x0e, 0x6e, 0x2f,
	0x36, 0x96, 0x99, 0x4e, 0xdc, 0x2f, 0x5d, 0x65, 0xce, 0xcf, 0xcf, 0x1d, 0xf9, 0x5f, 0x71, 0xf8,
	0x2f, 0x00, 0x00, 0xff, 0xff, 0x85, 0xdc, 0xd2, 0xd6, 0x68, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// StorageClient is the client API for Storage service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type StorageClient interface {
	// List all stored bottles
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*StoredBottleCollection, error)
	// Show bottle by ID
	Show(ctx context.Context, in *ShowRequest, opts ...grpc.CallOption) (*ShowResponse, error)
	// Add new bottle and return its ID.
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	// Remove bottle from storage
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
	// Rate bottles by IDs
	Rate(ctx context.Context, in *RateRequest, opts ...grpc.CallOption) (*RateResponse, error)
	// Add n number of bottles and return their IDs. This is a multipart request
	// and each part has field name 'bottle' and contains the encoded bottle info
	// to be added.
	MultiAdd(ctx context.Context, in *MultiAddRequest, opts ...grpc.CallOption) (*MultiAddResponse, error)
	// Update bottles with the given IDs. This is a multipart request and each part
	// has field name 'bottle' and contains the encoded bottle info to be updated.
	// The IDs in the query parameter is mapped to each part in the request.
	MultiUpdate(ctx context.Context, in *MultiUpdateRequest, opts ...grpc.CallOption) (*MultiUpdateResponse, error)
}

type storageClient struct {
	cc *grpc.ClientConn
}

func NewStorageClient(cc *grpc.ClientConn) StorageClient {
	return &storageClient{cc}
}

func (c *storageClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*StoredBottleCollection, error) {
	out := new(StoredBottleCollection)
	err := c.cc.Invoke(ctx, "/storage.Storage/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Show(ctx context.Context, in *ShowRequest, opts ...grpc.CallOption) (*ShowResponse, error) {
	out := new(ShowResponse)
	err := c.cc.Invoke(ctx, "/storage.Storage/Show", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := c.cc.Invoke(ctx, "/storage.Storage/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	out := new(RemoveResponse)
	err := c.cc.Invoke(ctx, "/storage.Storage/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) Rate(ctx context.Context, in *RateRequest, opts ...grpc.CallOption) (*RateResponse, error) {
	out := new(RateResponse)
	err := c.cc.Invoke(ctx, "/storage.Storage/Rate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) MultiAdd(ctx context.Context, in *MultiAddRequest, opts ...grpc.CallOption) (*MultiAddResponse, error) {
	out := new(MultiAddResponse)
	err := c.cc.Invoke(ctx, "/storage.Storage/MultiAdd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storageClient) MultiUpdate(ctx context.Context, in *MultiUpdateRequest, opts ...grpc.CallOption) (*MultiUpdateResponse, error) {
	out := new(MultiUpdateResponse)
	err := c.cc.Invoke(ctx, "/storage.Storage/MultiUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// StorageServer is the server API for Storage service.
type StorageServer interface {
	// List all stored bottles
	List(context.Context, *ListRequest) (*StoredBottleCollection, error)
	// Show bottle by ID
	Show(context.Context, *ShowRequest) (*ShowResponse, error)
	// Add new bottle and return its ID.
	Add(context.Context, *AddRequest) (*AddResponse, error)
	// Remove bottle from storage
	Remove(context.Context, *RemoveRequest) (*RemoveResponse, error)
	// Rate bottles by IDs
	Rate(context.Context, *RateRequest) (*RateResponse, error)
	// Add n number of bottles and return their IDs. This is a multipart request
	// and each part has field name 'bottle' and contains the encoded bottle info
	// to be added.
	MultiAdd(context.Context, *MultiAddRequest) (*MultiAddResponse, error)
	// Update bottles with the given IDs. This is a multipart request and each part
	// has field name 'bottle' and contains the encoded bottle info to be updated.
	// The IDs in the query parameter is mapped to each part in the request.
	MultiUpdate(context.Context, *MultiUpdateRequest) (*MultiUpdateResponse, error)
}

// UnimplementedStorageServer can be embedded to have forward compatible implementations.
type UnimplementedStorageServer struct {
}

func (*UnimplementedStorageServer) List(ctx context.Context, req *ListRequest) (*StoredBottleCollection, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedStorageServer) Show(ctx context.Context, req *ShowRequest) (*ShowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Show not implemented")
}
func (*UnimplementedStorageServer) Add(ctx context.Context, req *AddRequest) (*AddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedStorageServer) Remove(ctx context.Context, req *RemoveRequest) (*RemoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}
func (*UnimplementedStorageServer) Rate(ctx context.Context, req *RateRequest) (*RateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Rate not implemented")
}
func (*UnimplementedStorageServer) MultiAdd(ctx context.Context, req *MultiAddRequest) (*MultiAddResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultiAdd not implemented")
}
func (*UnimplementedStorageServer) MultiUpdate(ctx context.Context, req *MultiUpdateRequest) (*MultiUpdateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MultiUpdate not implemented")
}

func RegisterStorageServer(s *grpc.Server, srv StorageServer) {
	s.RegisterService(&_Storage_serviceDesc, srv)
}

func _Storage_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Show_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ShowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Show(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Show",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Show(ctx, req.(*ShowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_Rate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).Rate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/Rate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).Rate(ctx, req.(*RateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_MultiAdd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiAddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).MultiAdd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/MultiAdd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).MultiAdd(ctx, req.(*MultiAddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Storage_MultiUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultiUpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(StorageServer).MultiUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/storage.Storage/MultiUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(StorageServer).MultiUpdate(ctx, req.(*MultiUpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Storage_serviceDesc = grpc.ServiceDesc{
	ServiceName: "storage.Storage",
	HandlerType: (*StorageServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _Storage_List_Handler,
		},
		{
			MethodName: "Show",
			Handler:    _Storage_Show_Handler,
		},
		{
			MethodName: "Add",
			Handler:    _Storage_Add_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _Storage_Remove_Handler,
		},
		{
			MethodName: "Rate",
			Handler:    _Storage_Rate_Handler,
		},
		{
			MethodName: "MultiAdd",
			Handler:    _Storage_MultiAdd_Handler,
		},
		{
			MethodName: "MultiUpdate",
			Handler:    _Storage_MultiUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "storage.proto",
}
