// Code generated by goa v3.15.2, DO NOT EDIT.
//
// hello HTTP server types
//
// Command:
// $ goa gen goa.design/examples/httpstatus/design

package server

import (
	hello "goa.design/examples/httpstatus/gen/hello"
	helloviews "goa.design/examples/httpstatus/gen/hello/views"
)

// HelloCreatedResponseBody is the type of the "hello" service "hello" endpoint
// HTTP response body.
type HelloCreatedResponseBody struct {
	// The greeting message
	Greeting string `form:"greeting" json:"greeting" xml:"greeting"`
	Outcome  string `json:"-"`
}

// HelloAcceptedResponseBody is the type of the "hello" service "hello"
// endpoint HTTP response body.
type HelloAcceptedResponseBody struct {
	// The greeting message
	Greeting string `form:"greeting" json:"greeting" xml:"greeting"`
	Outcome  string `json:"-"`
}

// HelloOKResponseBody is the type of the "hello" service "hello" endpoint HTTP
// response body.
type HelloOKResponseBody struct {
	// The greeting message
	Greeting string `form:"greeting" json:"greeting" xml:"greeting"`
	Outcome  string `json:"-"`
}

// NewHelloCreatedResponseBody builds the HTTP response body from the result of
// the "hello" endpoint of the "hello" service.
func NewHelloCreatedResponseBody(res *helloviews.HelloView) *HelloCreatedResponseBody {
	body := &HelloCreatedResponseBody{
		Greeting: *res.Greeting,
		Outcome:  *res.Outcome,
	}
	return body
}

// NewHelloAcceptedResponseBody builds the HTTP response body from the result
// of the "hello" endpoint of the "hello" service.
func NewHelloAcceptedResponseBody(res *helloviews.HelloView) *HelloAcceptedResponseBody {
	body := &HelloAcceptedResponseBody{
		Greeting: *res.Greeting,
		Outcome:  *res.Outcome,
	}
	return body
}

// NewHelloOKResponseBody builds the HTTP response body from the result of the
// "hello" endpoint of the "hello" service.
func NewHelloOKResponseBody(res *helloviews.HelloView) *HelloOKResponseBody {
	body := &HelloOKResponseBody{
		Greeting: *res.Greeting,
		Outcome:  *res.Outcome,
	}
	return body
}

// NewHelloPayload builds a hello service hello endpoint payload.
func NewHelloPayload(greeting string) *hello.HelloPayload {
	v := &hello.HelloPayload{}
	v.Greeting = greeting

	return v
}
